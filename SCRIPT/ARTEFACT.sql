---------SEQUENCE USUARIO_SEQ--------------------
CREATE SEQUENCE SEQ_SERVICIO 
START WITH 1
INCREMENT BY 1
NOCACHE;
--TRIGGERS INSERTAR EL ID DEL SERVICIO
--TRG_ID_USUARIO
CREATE OR REPLACE TRIGGER TRG_ID_USUARIO
BEFORE INSERT 
ON SERVICIO 
REFERENCING NEW AS NEW OLD AS OLD 
FOR EACH ROW

BEGIN
  SELECT SEQ_SERVICIO.NEXTVAL
  INTO   :new.ID_SERVICIO
  FROM   dual;
END TRG_ID_USUARIO;
/

--INNER JOIN SERVICIO
SELECT SER.ID_SERVICIO,SER.ID_SEDE,SEDE.NOMBRE_EMPRESA AS SEDE,SER.ID_CLIENTE,CL.NOMBRE_CLIENTE || ' ' || CL.APELLIDO_CLIENTE AS CLIENTE,
                 SER.NUMERO_CONTACTOS,SER.ID_EMPLEADO,EMP.NOMBRE_EMPLEADO || ' '|| EMP.APELLIDO_EMPLEADO AS EMPLEADO,SER.ID_CARGO,CAR.NOMBRE_CARGO AS CARGO,
                SER.FECHA_INGRESO,SER.FECHA_ENTREGA,SER.ID_PRODUCTO,PROD.MARCA_PRODUCTO AS PRODUCTO,
                SER.ID_ESTADO_SERVICIO,ES.NOMBRE_ESRADO_SERVICIO AS ESTADOSERVICIO,
                SER.COMENTARIO_CLIENTE,SER.DIAGNOSTICO,SER.CANTIDAD,SER.VALOR_SERVICIO,SER.ESTADO_PRODUCTO,SER.DIRECCION_CLIENTE
                FROM SERVICIO SER
                INNER JOIN SEDE
                ON SER.ID_SEDE = SEDE.ID_SEDE
                INNER JOIN CLIENTE CL
                ON SER.ID_CLIENTE = CL.ID_CLIENTE
                INNER JOIN EMPLEADO EMP
                ON SER.ID_EMPLEADO = EMP.ID_EMPLEADO
                INNER JOIN CARGO CAR
                ON SER.ID_CARGO = CAR.ID_CARGO
                INNER JOIN PRODUCTO PROD
                ON SER.ID_PRODUCTO = PROD.ID_PRODUCTO
                INNER JOIN ESTADO_SERVICIO ES
                ON SER.ID_ESTADO_SERVICIO = ES.ID_ESTADO_SERVICIO
                ORDER BY SER.ID_SERVICIO;
                
--METODO PROCEDIMIENTO ALMACENADOS
--INSEERT LOS DATOS EMPLEADO
--LA FUNCION ES INSERTAR EN MANERA SEGURA LOS DATOS NUEVOS DEL EMPLEADO
--PRIMERO VALIDA QUE SI EXISTE EL DATO
--QUE SI EL DATO ES CORRECTO INSERTAR EMPLEADO
-- O SINO LANZAR UNA EXCEPCION EN EL COMANDO DEL DBMS
CREATE OR REPLACE PROCEDURE SP_INSERTAR_SERVICIO(P_IDSERVICIO IN SERVICIO.ID_SERVICIO%TYPE,
                                                    P_SEDE IN SERVICIO.ID_SEDE%TYPE,
                                                    P_IDCLIENTE IN SERVICIO.ID_CLIENTE%TYPE,
                                                    P_CONTACTOS IN SERVICIO.NUMERO_CONTACTOS%TYPE,
                                                    P_ID_EMPLEADO IN SERVICIO.ID_EMPLEADO%TYPE,
                                                    P_IDCARGO IN SERVICIO.ID_CARGO%TYPE,
                                                    P_FECHAINGRESO IN SERVICIO.FECHA_INGRESO%TYPE,
                                                    P_FECHAENTREGA IN SERVICIO.FECHA_ENTREGA%TYPE,
                                                    P_COMENTARIO IN SERVICIO.COMENTARIO_CLIENTE%TYPE,
                                                    P_IDPRODUCTO IN SERVICIO.ID_PRODUCTO%TYPE,
                                                    P_ESTADO_PRODUCTO IN SERVICIO.ESTADO_PRODUCTO%TYPE,
                                                    P_CANTIDAD IN SERVICIO.CANTIDAD%TYPE,
                                                    P_VALOR IN SERVICIO.VALOR_SERVICIO%TYPE,
                                                    P_IDESTADO IN SERVICIO.ID_ESTADO_SERVICIO%TYPE,
                                                    P_DIRECCION IN SERVICIO.DIRECCION_CLIENTE%TYPE)
IS
V_EXISTE NUMBER;
SERVICIO_NO_EXISTE EXCEPTION;
NOT_DATA_FOUND EXCEPTION;

BEGIN
    SELECT COUNT(ID_SERVICIO) INTO V_EXISTE
    FROM SERVICIO SER
    WHERE SER.ID_SERVICIO = P_IDSERVICIO;
    
    IF V_EXISTE = 0 THEN
        INSERT INTO SERVICIO 
            (ID_SERVICIO,ID_SEDE,ID_CLIENTE,NUMERO_CONTACTOS,ID_EMPLEADO,ID_CARGO,FECHA_INGRESO,FECHA_ENTREGA,COMENTARIO_CLIENTE,
            ID_PRODUCTO,ESTADO_PRODUCTO,CANTIDAD,VALOR_SERVICIO,ID_ESTADO_SERVICIO,DIRECCION_CLIENTE) 
        VALUES(
        P_IDSERVICIO,
        P_SEDE,
        P_IDCLIENTE,
        P_CONTACTOS,
        P_ID_EMPLEADO,
        P_IDCARGO,
        P_FECHAINGRESO,
        P_FECHAENTREGA,
        P_COMENTARIO,
        P_IDPRODUCTO,
        P_ESTADO_PRODUCTO,
        P_CANTIDAD,
        P_VALOR,
        P_IDESTADO,
        P_DIRECCION);
    ELSE
        RAISE SERVICIO_NO_EXISTE;
        RAISE NOT_DATA_FOUND;
    END IF;
    
EXCEPTION
    WHEN SERVICIO_NO_EXISTE THEN
        DBMS_OUTPUT.PUT_LINE('ID DEL SERVICIO ES INCORRECTO');
    WHEN NOT_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('EL SERVICIO NO EXISTE');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR GENERAL EN EL PROCESO DE INSERTAR');
END;


        --METODO INSERTAR SP_INSERTAR_VENDEDOR

SELECT * FROM SERVICIO;

EXEC SP_INSERTAR_SERVICIO(0,401,701,'+57 345745874',801,501,SYSDATE,TO_DATE('2019-08-10', 'YYYY-MM-DD'),'HOLA SANTI',902,'MAL ESTADO',2,950000,101,'CLL 45 #07-10 SUR');


DESC SERVICIO;